display: flex | inline-flex
flex occupies the entire width
flex-inline wraps according to the content width
flex stretches the content according to the container's height unless the height is specified.

flex-direction: row | row-reverse | column | column-reverse
By default it is row and main axis is left to right
if we specify as column then the main axis is from top to bottom

Wrapping Elements with flexbox:
flex-wrap: nowrap | wrap | wrap-reverse
Normally if we specify the width then if the content is more than width then a scrollbar is added by default.
flex-wrap is a property that we put on the flex container but not on flex item
By default flex-wrap is set to nowrap

if flex-wrap is set to wrap and flex-direction is set to row, then if content exceeds the specified / availble width then scrollbar will not be added,
instead the content will span across multiple rows

if the flex-wrap is set to wrap and flex-direction is set to column, then the content will go until the specified width , then
any extra content will be added as a separate column.
If no height is specified, then scrollbar will be added and all the content will be in the single column.

if the flex wrap is set to wrap-reverse, then the axis will be from bottom to top and left to right.


Flexbox Ordering:
flex: 1 => distributes all the available width to the all items evenly

by default order is set to 0
order specifies the order in which the content will be displayed
If order is positive then all the selectors that have order will be in the last with higher order as the rightmost
if order is negative then it starts from left most.

Using the order property will create a disconnect between the visual presentation of content and DOM order.

Justify Content: 
how items are aligned on main axis.

justify-content: flex-start | flex-end | center | space-between | space-around;

flex-start: content is aligned on x axis from left to right with starting point on left y axis.
flex-end: content is aligned on x axis from left to right with end point on right y axis.
center: content is aligned with equal space on left and right sides
space-between: first and last content are towards left and right end with no space. and the remaining content is arranged in the middle with equal spacing betweent the remaining items
space-around: first and last contents now has space between the margin and the content.

Aligning and Centering with align-items:
align-items: center | stretch | flex-start | flex-end | baseline;
concerned with cross-axis.

Default value is stretch. means content will span from top to bottom.

If the direction is not mentioned, and align items is center, then there is no effect. This is because by default the direction is row and the height is equal to the height of content.
if we specify the height, then items will be vertically centered with in that height.
baseline: looks at the text in every item and make sures that it is aligned properly. the base of content on all items will be on same base.
if the direction is column, and baseline is applied, then the content in all items will be based on left y axis.




